body {
    margin-bottom:20em;
}

h1 {
    color:red;
}
/*exemple d'application de dégradé à l'icone FA d'Instagram */
.fa-instagram {
    background: #d6249f;
    background: radial-gradient(circle at 30% 107%, #fdf497 0%, #fdf497 5%, #fd5949 45%,#d6249f 60%,#285AEB 90%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}
/* Si décalage entre Chrome et Firefox, on utilise 
@-moz-document url-prefix() {...}
 */
@-moz-document url-prefix() {
    h1 {
        /* sur Firefox, mon titre principal apparaîtra en vert et non en rouge comme stipulé ligne 6 */
        color:green;
    }
}




/* En même temps que je stylise mon document, j'introduis la notion de variables en CSS */

/* on place 2 tirets avant le nom de notre variable */
html {
    --main-color: #2a0481;
    --sec-color:#fc9d21;
}
/* Pour appeler nos variables, on utilise var(--ma-variable) */
.btn {
    margin:auto;
    background: var(--main-color);
    color:var(--sec-color);
    font-size:1.2em;
    padding:0.5em;
    width:12em;
    text-align:center;
    border-radius:10px;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    /* pour changer la forme du pointeur de la souris */
    cursor:pointer;    
    border:1px solid var(--sec-color);
}

.container1 .btn {
    
    /* J'applique ma transformation, en réalité, transform:scale(1) est la taille par défaut */
    transform: scale(1);
    /* On peut aussi écrire les 2 lignes suivantes de la sorte : transition: transform 1s; */
    transition-property: transform;
    transition-duration: 1s; /* ou 1000ms */
    
}

/* Au survol de la souris, je souhaite que mon élément grandisse  */

.container1 .btn:hover {
    transform: scale(1.5);
}


/* Je change le texte au survol */
.mon-texte {
    width:200px;
    margin:auto;
}
.mon-texte:hover span {
    display:none;
}

.mon-texte:hover:after {
    content: "Mon texte qui a changé";
}


/*  validation du focus */
.container2 form {
    width:10em;
    margin:auto;
}

.container2 {
    background:#cecece;
    min-height:5em;
}

.container2 form input {
    border:2px solid var(--main-color);
    border-radius:10px;
    padding:0.5em 1em;
    font-family: 'Open Sans', sans-serif;
    /* pour supprimer la bordure rouge du navigateur */
    outline:none;
}

.container2 form input:focus {
    border:2px solid green;
}

/* 
Cette technique est valide mais peut potentiellement induire les utilisateurs en erreur. Nous allons donc combiner invalid et focus avec not()

.container2 form input:invalid {
    border:2px solid crimson;
} */

.container2 form input:not(:focus):invalid {
    border:2px solid crimson;    
}


/* Déclements événements pseudo-classes */


/* les pseudoclasses les plus utilisées pour déclencher une transition sont : 
- :hover
- :active
- :focus
- :checked
- :not()
- :enabled
- :disabled 
*/
.container3, .container6 {
    display: flex;
    flex-direction: column-reverse;
}
.container3 .circle {
    width:5em;
    height:5em;
    margin:2em auto;
    background:var(--sec-color);
    border-radius: 50%;
    /* on peut aussi mettre des transitions */
    transform: scale(0.5);
    transition: transform 500ms;
}

.container3 .btn:active + .circle {
    transform: scale(1.5);
}


/* Transitions + propriétés multiples */

.container4 .btn {
    transform: scale(1);
    /* On peut utiliser all pour appliquer la transition sur toutes les propriétés */
    transition: all 500ms;
}

.container4 .btn:hover, .container5 .btn:hover {
    transform: scale(1.5);
    background-color:var(--sec-color);
    color:var(--main-color);
    border:2px solid var(--main-color);
}

.container5 {
    margin-top:3em; 
}
.container5 .btn {
    transition: transform 1s, background-color 500ms;
    /* pour retarder l'animation  */
    transition-delay: 1s, 500ms;
}


/* point d'ancrage */

.progress {
    width: 500px;
    height:30px;
    border: 1px solid var(--main-color);
    margin:2em auto;
    padding:2px;
    border-radius: 10px;
}

.progress-bar {
    background:var(--sec-color);
    height:5px;
    border-radius: 30px;
    /* on met scaleX(0) pour faire disparaître notre bg */
    transform: scaleX(0);
    transition:2s cubic-bezier(.72,.91,.37,-0.44);
}

.container6 .btn:active + .progress > .progress-bar {
    transform:scaleX(1);
    transition: transform 2s;
    transform-origin: 0 50%;
}

/*  footer + icones */

footer ul,.rating ul  {
    display:flex;
}

footer ul li, .rating ul li {
    list-style-type:none;
    margin:0 2em;
    font-size: 3em;
}

.blue {
    color:blue;
}
.grey {
    color:grey;
}